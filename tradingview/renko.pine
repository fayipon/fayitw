//@version=4
//Simple Renko strategy, very profitable. Thanks to vacalo69 for the idea.
//Rules when the strategy opens order at market as follows:
//- Buy when previous brick (-1) was bearish and previous brick (-2) was bearish too and actual brick close is bullish
//- Sell when previous brick (-1) was bullish and previous brick (-2) was bullish too and actual brick close is bearish
//Rules when the strategy send stop order are the same but this time a stop buy or stop sell is placed (better overall results).
//Note that strategy open an order only after that condition is met, at the beginning of next candle, so the actual close is not the actual price.
//Only input is the brick size multiplier for stop loss and take profit: SL and TP are placed at (brick size)x(multiplier) Or put it very high if you want startegy to close order on opposite signal.
//Adjust brick size considering: 
//- Strategy works well if there are three or more consecutive bricks of same "color"
//- Expected Profit
//- Drawdown
//- Time on trade
//
//Study with alerts, MT4 expert advisor and jforex automatic strategy are available at request.
//

strategy("Renko Strategy Open_Close", overlay=true, calc_on_every_tick=true, pyramiding=0, default_qty_type=strategy.percent_of_equity, default_qty_value=100, currency=currency.USD)

//INPUTS__________________________
Multiplier = input(1, minval=0, title='Brick size multiplier: use high value to avoid SL and TP')
UseStopOrders = input(true, title='Use stop orders instead of market orders')
src = input(close, "source")
brickSize = input(7, "Renko box size", type=input.float, step=0.001)
siPro = input(true, "Pro User?")
periodo = input(title="Resolution", type=input.resolution, defval="D")
//__________________________________________

//CALCULATIONS

renko_tickerid = renko(syminfo.tickerid, "Traditional", brickSize)
renko_close = security(renko_tickerid, periodo, close)
renko_open = security(renko_tickerid, periodo, open)
renko_high = security(renko_tickerid, periodo, high)
renko_low = security(renko_tickerid, periodo, low)
p1 = plot(renko_close)
p2 = plot(renko_open)
fill(p1, p2, color=renko_close > renko_open ? color.green : color.red)
BrickSize = siPro ? abs(open[1] - close[1]) : abs(renko_open[1] - renko_close[1])
targetProfit = 0
targetSL = 0
Open = siPro ? open : renko_open
Close = siPro ? close : renko_close

//STRATEGY CONDITIONS
longCondition = siPro and open[1] > close[1] and close > open and open[1] < open[2]
noProLong = not siPro and renko_open[1] > renko_close[1] and renko_close > renko_open and 
   renko_open[1] < renko_open[2]  //in caso di no Pro allora uso le candele normali

shortCondition = siPro and open[1] < close[1] and close < open and open[1] > open[2]
noProShort = not siPro and renko_open[1] < renko_close[1] and renko_close < renko_open and 
   renko_open[1] > renko_open[2]

//STRATEGY
if longCondition and not UseStopOrders and siPro
    strategy.entry("LongBrick", strategy.long)
    targetProfit = close + BrickSize * Multiplier
    targetSL = close - BrickSize
    strategy.exit("CloseLong", "LongBrick", limit=targetProfit, stop=targetSL)

if shortCondition and not UseStopOrders and siPro
    strategy.entry("ShortBrick", strategy.short)
    targetProfit = close - BrickSize * Multiplier
    targetSL = close + BrickSize
    strategy.exit("CloseShort", "ShortBrick", limit=targetProfit, stop=targetSL)

if longCondition and UseStopOrders and siPro
    strategy.entry("LongBrick_Stop", strategy.long, stop=open[2])
    targetProfit = close + BrickSize * Multiplier
    targetSL = close - BrickSize
    strategy.exit("CloseLong", "LongBrick_Stop", limit=targetProfit, stop=targetSL)

if shortCondition and UseStopOrders and siPro
    strategy.entry("ShortBrick_Stop", strategy.short, stop=open[2])
    targetProfit = close - BrickSize * Multiplier
    targetSL = close + BrickSize
    strategy.exit("CloseShort", "ShortBrick_Stop", limit=targetProfit, stop=targetSL)
//-------------------No Pro subscription---------------------    
if noProLong and not UseStopOrders and not siPro
    strategy.entry("LongBrick", strategy.long)
    targetProfit = renko_close + BrickSize * Multiplier
    targetSL = renko_close - BrickSize
    strategy.exit("CloseLong", "LongBrick", limit=targetProfit, stop=targetSL)

if noProShort and not UseStopOrders and not siPro
    strategy.entry("ShortBrick", strategy.short)
    targetProfit = renko_close - BrickSize * Multiplier
    targetSL = renko_close + BrickSize
    strategy.exit("CloseShort", "ShortBrick", limit=targetProfit, stop=targetSL)

if noProLong and UseStopOrders and not siPro
    strategy.entry("LongBrick_Stop", strategy.long, stop=renko_open[2])
    targetProfit = renko_close + BrickSize * Multiplier
    targetSL = renko_close - BrickSize
    strategy.exit("CloseLong", "LongBrick_Stop", limit=targetProfit, stop=targetSL)

if noProShort and UseStopOrders and not siPro
    strategy.entry("ShortBrick_Stop", strategy.short, stop=renko_open[2])
    targetProfit = renko_close - BrickSize * Multiplier
    targetSL = renko_close + BrickSize
    strategy.exit("CloseShort", "ShortBrick_Stop", limit=targetProfit, stop=targetSL)



